version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: image-model-coco-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DB_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/image_rag_db
    depends_on:
      - postgres
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../reports:/app/reports
    networks:
      - app-network

  postgres:
    image: pgvector/pgvector:pg15
    container_name: image-model-coco-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=image_rag_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: image-model-coco-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 